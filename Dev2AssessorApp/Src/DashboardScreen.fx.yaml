DashboardScreen As screen:
    OnVisible: |-
        =
        //Set(LogOutTimer, -1800);
        Set(varPatchTimer,false);
        UpdateIf(
                gcProjectAssignment,
                 isCompleted = "Inprogress1",
                {
                    isCompleted: "Inprogress"
                }
            );
           SaveData(
                    gcProjectAssignment,
                    "localprojectassignment"
           );

    ctnMainDS As groupContainer.verticalAutoLayoutContainer:
        Height: =Parent.Height
        LayoutDirection: =LayoutDirection.Vertical
        LayoutMode: =LayoutMode.Auto
        LayoutOverflowY: =LayoutOverflow.Scroll
        Width: =Parent.Width
        ZIndex: =3

        ctnHeaderDS As groupContainer.manualLayoutContainer:
            Fill: =Header.HeaderFill
            FillPortions: =0
            Height: =80
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            Width: =Parent.Width
            Y: =10
            ZIndex: =1

            GroupHeaderDS As group:
                Height: =5
                Width: =5
                X: =40
                Y: =40
                ZIndex: =11

                imgLogoDS As image:
                    DisplayMode: =DisplayMode.View
                    Fill: =RGBA(255, 255, 255, 1)
                    Height: =ctnHeaderDS.Height
                    Image: ='schindler-logo'
                    PaddingBottom: =5
                    PaddingLeft: =2
                    PaddingRight: =1
                    PaddingTop: =5
                    Width: =ctnHeaderDS.Width/12
                    ZIndex: =1

                lblAssessmentDS As label:
                    Align: =Align.Center
                    Color: =Header.HeaderColor
                    Font: =Header.HeaderFont
                    FontWeight: =FontWeight.Bold
                    Height: =ctnHeaderDS.Height
                    Size: |-
                        =
                        Header.HeaderFontSize
                    Text: ="Dashboard"
                    Width: =ctnHeaderDS.Width/1.95
                    X: =imgLogoDS.Width
                    ZIndex: =2

                imgUserHeaderDS As image:
                    Height: =50
                    Image: =userImg
                    ImagePosition: =ImagePosition.Fill
                    RadiusBottomLeft: =ctnHeaderDS.Height/0.10
                    RadiusBottomRight: =ctnHeaderDS.Height/0.10
                    RadiusTopLeft: =ctnHeaderDS.Height/0.10
                    RadiusTopRight: =ctnHeaderDS.Height/0.10
                    Width: =50
                    X: =lblAssessmentDS.X+lblAssessmentDS.Width
                    Y: =(ctnHeaderDS.Height-Self.Height)/2
                    ZIndex: =4

                lblUsernameHeaderDS As label:
                    Color: =RGBA(255, 255, 255, 1)
                    Font: =Header.HeaderFont
                    FontWeight: =FontWeight.Bold
                    Height: =Parent.Height
                    PaddingLeft: =20
                    Size: =Header.HeaderUserFontSize-2
                    Text: =username
                    Width: =ctnHeaderDS.Width/6.5
                    X: =imgUserHeaderDS.Width+imgUserHeaderDS.X
                    ZIndex: =5

                NetworkIconDS As Component2:
                    X: =lblUsernameHeaderDS.Width+lblUsernameHeaderDS.X
                    Y: =(ctnHeaderDS.Height-Self.Height)/2
                    ZIndex: =9

                syncButton As icon.Reload:
                    Color: =RGBA(255, 255, 255, 1)
                    DisabledColor: =RGBA(230, 230, 230, 1)
                    Height: =40
                    Icon: =Icon.Sync
                    OnSelect: |
                        =//get new assignment and completed assignment updates
                        If(
                            //here we check network is available or not
                            Connection.Connected,
                            If(
                                //here we check assignment,bankassessment,unitassessment collection have any unsend data or not,if yes then gives message "Assessement records saved in your device has not yet submitted to server .Please submit and try again." otherwise get new assignment related data
                        
                                IsBlank(LookUp(gcProjectAssignment,AstatusUpdate = 0 || AstatusUpdate = 1))            &&
                                IsBlank(LookUp(GC_bankAssessment,BstatusUpdate = 0 || BstatusUpdate = 1))              &&
                                IsBlank(LookUp(GC_unitAssessment,UstatusUpdate = 0 || UstatusUpdate = 1)) ,
                           
                             
                             Set(popupDashSyncText,"Getting new assignment assigned to you. ");
                             Set(popupDashSyncSuccess,true);
                            Concurrent(
                        //client master data
                                ClearCollect(
                                    gcClient,
                                    schindlerClients
                                );
                                SaveData(
                                    gcClient,
                                    "localclient"
                            );
                                ,
                           //Banks master data
                                ClearCollect(
                                    gcBank,
                                    schindlerBanks
                                );
                                SaveData(
                                    gcBank,
                                    "localbank"
                                );
                                ,
                            //master units data
                                ClearCollect(
                                    gcBankunit,
                                    bankUnits
                                );
                                SaveData(
                                    gcBankunit,
                                    "localgcbankunit"
                                );
                                ,
                            //assignment data 
                                
                                ClearCollect(
                                        gcProjectAssignmentAdd,
                                        Filter(
                                            assignments,
                                            assessorId = varLoggedAssessor
                                        )
                                    );
                                    ClearCollect(
                                        gcProjectAssignment,
                                        AddColumns(
                                            gcProjectAssignmentAdd,
                                            "AstatusUpdate",
                                            2
                                        )
                                    );
                                    ,
                                
                                //assignment unit
                                ClearCollect(
                                    gcAssignmentunit,
                                    Filter(
                                        assignmentUnits,
                                        assignmentId.assessorId = varLoggedAssessor
                                    )
                                );
                                SaveData(
                                    gcAssignmentunit,
                                    "localassignmentunits"
                                );
                                ,
                                //bank Assessment
                                ClearCollect(
                                        GC_bankAssessmentAdd,
                                        Filter(
                                            bankAssessment,
                                            assignmentId.assessorId = varLoggedAssessor
                                        )
                                    );
                                    ClearCollect(
                                        GC_bankAssessment,
                                        AddColumns(
                                            GC_bankAssessmentAdd,
                                            "BstatusUpdate",
                                            2
                                        )
                                    );
                                ,
                                //unit assessment
                                ClearCollect(
                                        GC_unitAssessmentAdd,
                                        Filter(
                                            unitAssessment,
                                            assignmentId.assessorId = varLoggedAssessor
                                        )
                                    );
                                    ClearCollect(
                                        GC_unitAssessment,
                                        AddColumns(
                                            GC_unitAssessmentAdd,
                                            "UstatusUpdate",
                                            2
                                        )
                                    );
                                );//concurrent close
                            
                        //delete completed assignment data from localcache 
                        ForAll(
                                Filter(
                                    gcProjectAssignment,
                                    isCompleted = "Completed"
                                ) As i,
                                RemoveIf(
                                    GC_bankAssessment,
                                    assignmentId.Id = i.Id
                                );
                                RemoveIf(
                                    GC_unitAssessment,
                                    assignmentId.Id = i.Id
                                );
                                RemoveIf(
                                    GcSectionAssessment,
                                    assignmentId.Id = i.Id
                                );
                                RemoveIf(
                                    GcCheckpointAssessment,
                                    assignmentId.Id = i.Id
                                );
                                RemoveIf(
                                    GC_checkpointItemAssessment,
                                    assignmentId.Id = i.Id
                                );
                                RemoveIf(
                                    GC_checkpointItem_ActionItem,
                                    assignmentId.Id = i.Id
                                );
                                RemoveIf(
                                    GC_checkpointItem_Images,
                                    assignmentId.Id = i.Id
                                );
                            );
                        //save data to localcache
                            SaveData(
                                    gcProjectAssignment,
                                    "localprojectassignment"
                                );
                            SaveData(
                                    GC_bankAssessment,
                                    "localbankassessment"
                                );
                            SaveData(
                                    GC_unitAssessment,
                                    "localunitassessment"
                                );
                            SaveData(
                                GcSectionAssessment,
                                "localsectionassessment"
                            );
                            SaveData(
                                GcCheckpointAssessment,
                                "localcheckpointassessment"
                            );
                            SaveData(
                                GC_checkpointItemAssessment,
                                "localcheckpointitemassessment"
                            );
                            SaveData(
                                GC_checkpointItem_ActionItem,
                                "localcheckpointitemactionitem"
                            );
                            SaveData(
                                GC_checkpointItem_Images,
                                "localcheckpointitemimage"
                            );
                        
                            Trace(First(gcAssignmentunit).bankUnitId.unitNumber,TraceSeverity.Information);
                            ,
                             
                             Set(popupDashSyncText,"Assessement records saved in your device has not yet submitted to server .Please submit and try again.");
                             Set(popupDashSyncSuccess,true);    
                            );  
                            ,
                           
                             Set(popupDashSyncText,"Network not available,Please check your network connection.");
                               Set(popupDashSyncSuccess,true);
                        );
                        //update Inprogress1 status to Inprogress to fix dashboard update issue
                        UpdateIf(
                            gcProjectAssignment,
                            isCompleted = "Inprogress1",
                            {isCompleted: "Inprogress"}
                        );
                    Width: =40
                    X: =NetworkIconDS.X+NetworkIconDS.Width+10
                    Y: =(ctnHeaderDS.Height-Self.Height)/2
                    ZIndex: =10

        ctnMiddleDS As groupContainer.horizontalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            FillPortions: =0
            Height: |
                =Parent.Height/2
            LayoutGap: =10
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            PaddingBottom: =20
            PaddingLeft: =20
            PaddingRight: =20
            PaddingTop: =20
            Width: =Parent.Width
            Y: =ctnHeaderDS.Height
            ZIndex: =2

            ctnCompletedProjects As groupContainer.manualLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                BorderColor: =RGBA(230,230,230,1)
                BorderThickness: =3
                FillPortions: =0
                Height: |-
                    =If(
                        App.Width < 1000,
                        Parent.Height / 3,
                        App.Width > 1000 && App.Width < 1200,
                        Parent.Height / 2.3,
                        Parent.Height / 1.6
                    )
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                Visible: =false
                Width: =Parent.Width/3.15
                Y: =ctnHeaderDS.Height
                ZIndex: =1

                lblCompletedproject As label:
                    Font: =Dashboard.DFont
                    FontWeight: =FontWeight.Bold
                    Height: =70
                    Size: =Dashboard.DFontSize
                    Text: |-
                        ="Completed
                        Assignments"
                    Width: =300
                    X: =Parent.Width/21
                    Y: =Parent.Height/8
                    ZIndex: =1

                lblCountCompletedproject As label:
                    Color: =RGBA(255, 0, 0, 1)
                    Font: =Dashboard.DFont
                    FontWeight: =FontWeight.Bold
                    Height: =88
                    Size: =If(App.Height<800,Dashboard.DCountSize,30)
                    Text: |-
                        =//To display Completed assignment count of Specific assessor 
                        CountRows(
                            (Filter(
                                gcProjectAssignment,
                                assessorId = varLoggedAssessor && isCompleted = "Completed"
                            ))
                        )
                    X: =Parent.Width/21
                    Y: =lblCompletedproject.Y+lblCompletedproject.Height+10
                    ZIndex: =2

                btnCompletedproject As button:
                    BorderColor: |
                        =
                    BorderThickness: =
                    Color: |+
                        =RGBA(0,0,0,0)
                        
                    DisabledBorderColor: =RGBA(0,0,0,0)
                    DisabledColor: =RGBA(0,0,0,0)
                    DisabledFill: =RGBA(0,0,0,0)
                    Fill: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =RGBA(0,0,0,0)
                    FocusedBorderThickness: =
                    Height: =ctnCompletedProjects.Height
                    HoverBorderColor: =RGBA(0,0,0,0)
                    HoverColor: =RGBA(0,0,0,0)
                    HoverFill: =ColorFade(RGBA(0,0,0,0),-20%)
                    OnSelect: |-
                        =Set(upcomp,false);
                        Set(inpro,false);
                        Set(comp,true);
                        Navigate(ProjectScreen);
                    PressedBorderColor: =RGBA(0,0,0,0)
                    PressedColor: =RGBA(0,0,0,0)
                    PressedFill: =RGBA(0,0,0,0)
                    Text: =
                    Width: =ctnCompletedProjects.Width
                    ZIndex: =4

                imgCompletedprojects As image:
                    Height: =Parent.Height/3
                    Image: =completed
                    Width: =Parent.Width/5
                    X: =Parent.Width/1.3
                    Y: =lblCompletedproject.Y+lblCompletedproject.Height+10
                    ZIndex: =5

            ctnProgressProjects As groupContainer.manualLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                BorderColor: =RGBA(230,230,230,1)
                BorderThickness: =3
                FillPortions: =0
                Height: |-
                    =If(
                        App.Width < 1000,
                        Parent.Height / 2.3,
                        App.Width > 1000 && App.Width < 1200,
                        Parent.Height / 2.3,
                        Parent.Height / 1.6
                    )
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                Width: =Parent.Width/2.15
                Y: =ctnHeaderDS.Height
                ZIndex: =2

                lblProgressProjects As label:
                    Font: =Dashboard.DFont
                    FontWeight: =FontWeight.Bold
                    Height: =70
                    Size: =Dashboard.DFontSize
                    Text: |-
                        ="In-progress
                        Assignments"
                    Width: =300
                    X: =Parent.Width/21
                    Y: =Parent.Height/8
                    ZIndex: =1

                lblCountProgressProjects As label:
                    Color: =RGBA(255, 0, 0, 1)
                    Font: =Dashboard.DFont
                    FontWeight: =FontWeight.Bold
                    Height: =88
                    Size: =If(App.Height<800,Dashboard.DCountSize,32)
                    Text: |-
                        =//To display Inprogress assignment count of Specific assessor 
                        CountRows(
                            (Filter(
                                gcProjectAssignment,
                                assessorId = varLoggedAssessor && isCompleted = "Inprogress"
                            ))
                        )
                    X: =Parent.Width/21
                    Y: =lblProgressProjects.Y+lblProgressProjects.Height+10
                    ZIndex: =2

                imgProgressprojects As image:
                    Height: =Parent.Height/3
                    Image: =inprogress
                    Width: =Parent.Width/5
                    X: =Parent.Width/1.3
                    Y: =lblProgressProjects.Y+lblProgressProjects.Height+10
                    ZIndex: =4

                btnInprogressproject As button:
                    BorderColor: =
                    BorderThickness: =
                    Color: |+
                        =RGBA(0,0,0,0)
                        
                    DisabledBorderColor: =RGBA(0,0,0,0)
                    DisabledColor: =RGBA(0,0,0,0)
                    DisabledFill: =RGBA(0,0,0,0)
                    Fill: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =RGBA(0,0,0,0)
                    FocusedBorderThickness: =
                    Height: =ctnCompletedProjects.Height
                    HoverBorderColor: =RGBA(0,0,0,0)
                    HoverColor: =RGBA(0,0,0,0)
                    HoverFill: =ColorFade(RGBA(0,0,0,0),-20%)
                    OnSelect: |-
                        =Set(comp,false);
                        Set(upcomp,false);
                        Set(inpro,true);
                        Navigate(ProjectScreen);
                    PressedBorderColor: =RGBA(0,0,0,0)
                    PressedColor: =RGBA(0,0,0,0)
                    PressedFill: =RGBA(0,0,0,0)
                    Text: =
                    Width: =ctnProgressProjects.Width
                    X: =0.34920634920632665
                    ZIndex: =5

            ctnUpcomingProjects As groupContainer.manualLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                BorderColor: =RGBA(230,230,230,1)
                BorderThickness: =3
                FillPortions: =0
                Height: |-
                    =If(
                        App.Width < 1000,
                        Parent.Height / 2.3,
                        App.Width > 1000 && App.Width < 1200,
                        Parent.Height / 2.3,
                        Parent.Height / 1.6
                    )
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                Width: =Parent.Width/2.15
                Y: =ctnHeaderDS.Height
                ZIndex: =3

                lblUpcomingProjects As label:
                    Font: =Dashboard.DFont
                    FontWeight: =FontWeight.Bold
                    Height: =70
                    Size: =Dashboard.DFontSize
                    Text: |-
                        ="Upcoming
                        Assignments"
                    Width: =300
                    X: =Parent.Width/21
                    Y: =Parent.Height/8
                    ZIndex: =1

                lblCountUpcomingProjects As label:
                    Color: =RGBA(255, 0, 0, 1)
                    Font: =Dashboard.DFont
                    FontWeight: =FontWeight.Bold
                    Height: =88
                    Size: =If(App.Height<800,Dashboard.DCountSize,32)
                    Text: |-
                        =//To display Upcomming assignment count of Specific assessor 
                        CountRows(
                            (Filter(
                                gcProjectAssignment,
                                assessorId = varLoggedAssessor && isCompleted = "Upcomming" || isCompleted = "Inprogress1"
                            ))
                        )
                    X: =Parent.Width/21
                    Y: =lblUpcomingProjects.Y+lblUpcomingProjects.Height+10
                    ZIndex: =2

                imgUpcomingProjects As image:
                    Height: =Parent.Height/3
                    Image: =building
                    Width: =Parent.Width/5
                    X: =Parent.Width/1.3
                    Y: =lblUpcomingProjects.Y+lblUpcomingProjects.Height+10
                    ZIndex: =4

                btnUpcomingProjects As button:
                    BorderColor: |
                        =
                    BorderThickness: =
                    Color: |+
                        =RGBA(0,0,0,0)
                        
                    DisabledBorderColor: =RGBA(0,0,0,0)
                    DisabledColor: =RGBA(0,0,0,0)
                    DisabledFill: =RGBA(0,0,0,0)
                    Fill: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =RGBA(0,0,0,0)
                    FocusedBorderThickness: =
                    Height: =ctnCompletedProjects.Height
                    HoverBorderColor: =RGBA(0,0,0,0)
                    HoverColor: =RGBA(0,0,0,0)
                    HoverFill: =ColorFade(RGBA(0,0,0,0),-20%)
                    OnSelect: |-
                        =Set(comp,false);
                        Set(inpro,false);
                        Set(upcomp,true);
                        Navigate(ProjectScreen);
                    PressedBorderColor: =RGBA(0,0,0,0)
                    PressedColor: =RGBA(0,0,0,0)
                    PressedFill: =RGBA(0,0,0,0)
                    Text: =
                    Width: =ctnUpcomingProjects.Width
                    X: =0.34920634920632665
                    ZIndex: =5

                iconUpcomingprojectindicator As circle:
                    Fill: =RGBA(255, 191, 0, 1)
                    Height: =20
                    Visible: |
                        =If(CountRows((Filter(gcProjectAssignment,assessorId=varLoggedAssessor && isCompleted="Upcomming")))>0,true,false)
                    Width: =20
                    X: =Parent.Width-40
                    Y: =20
                    ZIndex: =6

        ctnlpdimg As groupContainer.horizontalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            FillPortions: =0
            Height: |-
                =If(
                    App.Height < 900,
                    Parent.Height,
                    Parent.Height / 3
                )
            LayoutAlignItems: =LayoutAlignItems.End
            LayoutDirection: =LayoutDirection.Vertical
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            PaddingBottom: =200
            Width: =Parent.Width
            ZIndex: =3

            Container2 As groupContainer.verticalAutoLayoutContainer:
                Height: =60
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                Width: =Parent.Width
                X: =Parent.X
                Y: =Parent.Y
                ZIndex: =1

                Button2 As button:
                    Fill: =AllScreensCSS.RActiveColor
                    Text: ="Report Issue"
                    ZIndex: =1

            imgGraphicDS As image:
                AlignInContainer: =AlignInContainer.End
                Height: =Parent.Height
                Image: =graphic
                Width: =Parent.Width-500
                ZIndex: =3

        ctnlpdname As groupContainer.verticalAutoLayoutContainer:
            Height: =250
            LayoutDirection: =LayoutDirection.Vertical
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            Width: =Parent.Width
            ZIndex: =4

            imgLPD As image:
                AlignInContainer: =AlignInContainer.Center
                Height: =Parent.Height
                Image: ='lpd red'
                ImagePosition: =ImagePosition.Center
                Width: =Parent.Width
                ZIndex: =1

    imgloaderDS As image:
        Fill: =RGBA(0, 0, 0, 0.29)
        Height: =Parent.Height
        Image: ='ajax-loader 2'
        ImagePosition: =ImagePosition.Center
        Visible: =//varload = true
        Width: =Parent.Width
        X: =(Parent.Width-Self.Width)/2
        Y: =(Parent.Height-Self.Height)/2
        ZIndex: =5

    tmr_logout As timer:
        AutoStart: =//true
        Duration: =//30000
        OnTimerEnd: =
        OnTimerStart: =true
        Visible: =false
        X: =20
        Y: =20
        ZIndex: =14

    grPatchSuccessDS As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =14

        iconOuterRectangleDS As rectangle:
            Fill: =RGBA(0, 0, 0, 0.29)
            Height: =Parent.Height
            Visible: =popupDashSyncSuccess =true
            Width: =Parent.Width
            ZIndex: =8

        iconInnerRectsngleDS As rectangle:
            Fill: =RGBA(255, 255, 255, 1)
            Height: =270
            Visible: =popupDashSyncSuccess =true
            Width: =400
            X: =(Parent.Width-Self.Width)/2
            Y: =Parent.Height/3
            ZIndex: =9

        imgInfoDS As image:
            Height: =52
            Image: =info
            Visible: =popupDashSyncSuccess =true
            Width: =52
            X: =(Parent.Width-Self.Width)/2
            Y: =iconInnerRectsngleDS.Y+20
            ZIndex: =10

        LblTextDS As label:
            Align: =Align.Center
            Font: =AllScreensCSS.RFont
            FontWeight: =FontWeight.Semibold
            Height: =100
            Size: =15
            Text: =popupDashSyncText
            Visible: =popupDashSyncSuccess =true
            Width: =350
            X: =(Parent.Width-Self.Width)/2
            Y: =imgInfoDS.Y+imgInfoDS.Height
            ZIndex: =12

        btnSuccessDS As button:
            Fill: =RGBA(54, 176, 75, 1)
            Font: =AllScreensCSS.RFont
            HoverFill: =RGBA(75, 125, 6, 1)
            OnSelect: |+
                =Set(
                    popupDashSyncSuccess,
                    false
                );
                
            PressedBorderColor: =RGBA(1, 43, 1, 0)
            PressedFill: =Self.Fill
            Text: ="Ok"
            Visible: =popupDashSyncSuccess =true
            Width: =120
            X: =(Parent.Width-Self.Width)/2
            Y: =LblTextDS.Y+ LblTextDS.Height+5
            ZIndex: =13

